import unittest

from pathlib import Path
from typing import List, Type

from indexify_extractor_sdk.base_extractor import Content, Extractor
from parameterized import parameterized
from wikipedia import WikipediaExtractor


class TestWikipediaExtractor(unittest.TestCase):
    def __init__(self, *args, **kwargs):
        super(TestWikipediaExtractor, self).__init__(*args, **kwargs)
        self.html_content = self._get_html_content()

    def _get_html_content(self) -> List[Content]:
        file_name = "Stephen_Curry.html"
        path = str(Path(__file__).parent) + "/utils/" + file_name
        with open(path, "r") as f:
            data = f.read()

        content = Content.from_text(text=data, labels={"filename": file_name})

        return content

    @parameterized.expand([WikipediaExtractor()])
    def test_wikipedia_extraction(self, wikipedia_extractor: Type[Extractor]):
        extracted_content = wikipedia_extractor.extract(self.html_content)
        self.assertIsNotNone(extracted_content[0])
        self.assertIsNotNone(extracted_content[0].labels)


if __name__ == '__main__':
    unittest.main()
